@page "/unit-of-measure/create"
@using BlazorClient.Services
@using WMS.UI.Models.Resource.Request
@using WMS.UI.Models.UnitOfMeasure.Request
@inject UnitOfMeasureService UnitOfMeasureService
@inject NavigationManager NavigationManager

<h3>Добавление еденицы измерения</h3>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">@errorMessage</div>
}

<div class="create-form">
    <div class="form-group">
        <label>Наименование:</label>
        <input @bind="unitOfMeasureTitle" class="form-control" />
    </div>

    <div class="form-actions">
        <button @onclick="HandleCreate" class="btn-save" disabled="@isLoading">
            @if (isLoading)
            {
                <span>Создание...</span>
            }
            else
            {
                <span>Создать</span>
            }
        </button>
        <button @onclick="HandleCancel" class="btn-cancel" disabled="@isLoading">Отмена</button>
    </div>
</div>

@code {
    private string unitOfMeasureTitle = string.Empty;
    private string errorMessage = string.Empty;
    private bool isLoading = false;

    private async Task HandleCreate()
    {
        if (string.IsNullOrWhiteSpace(unitOfMeasureTitle))
        {
            errorMessage = "Название не может быть пустым";
            return;
        }

        isLoading = true;
        errorMessage = string.Empty;

        var request = new UnitOfMeasureParamsRequest(unitOfMeasureTitle.Trim());

        var (success, error) = await UnitOfMeasureService.CreateAsync(request);

        if (success)
        {
            NavigationManager.NavigateTo("/unit-of-measures");
        }
        else
        {
            errorMessage = error;
        }

        isLoading = false;
    }

    private void HandleCancel()
    {
        NavigationManager.NavigateTo("/unit-of-measures");
    }
}